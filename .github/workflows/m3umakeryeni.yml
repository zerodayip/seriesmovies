name: M3U MAKER

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Her 5 saatte bir

jobs:
  part1:
    name: Step 1-2-3 Çalıştır
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: main

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-cache-${{ runner.os }}-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      - name: Install Shared Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml playwright aiohttp aiofiles dotenv
          playwright install

      # 1. Vavoo IPTV Scripts
      - name: Run KENDI PROXY UZERINDEN YAYIN ALINIYOR.py
        run: python private_py/vavoo/iptv/vavooiptvkendi.py

      # 2. DiziFun Diziler Yerli Scripts
      - name: Run dizifunyenibolumler.py
        run: python private_py/series/dizifun/yenibolumler.py

      # 2. DiziLife Diziler Yerli Scripts
      - name: Run dizilifeyenibolumler.py
        run: python private_py/series/dizilife/yenibolumler.py

      - name: Sync Vavoo outputs to private m3u8file repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/m3u8file.git privaate_m3u8file
          cp v/vavoo.m3u privaate_m3u8file/vavoo.m3u || echo "v/vavoo.m3u bulunamadı"
          cp dizifundizi.m3u privaate_m3u8file/dizifundizi.m3u || echo "dizifundizi.m3u bulunamadı"
          cp dizilifedizi.m3u privaate_m3u8file/dizilifedizi.m3u || echo "dizilifedizi.m3u bulunamadı"
          cd privaate_m3u8file
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add vavoo.m3u dizifundizi.m3u dizilifedizi.m3u
          git commit -m "Vavoo & DiziFun & DiziLife çıktısı güncellendi [auto]" || echo "No changes"
          git push origin main

      # 3. Run All JSON
      - name: Run Dizigom JSON Script
        run: python private_py/series/dizigom/dizigomdizijson.py

      - name: Run Sezonlukdizi JSON Script
        run: python private_py/series/sezonlukdizi/tumdizilerjson.py

      - name: Run Anizm JSON Script
        run: python private_py/anime/anizm/anizimjson.py

      - name: Run AnimeNoSub JSON Script
        run: python private_py/anime/ingilizce/animenosub/animenosubjson.py

      - name: Commit and Push All JSONs to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dizigom/*.json || echo "No dizigom files"
          git add sdizi/*.json || echo "No sezonlukdizi files"
          git add anizm/*.json || echo "No anizm files"
          git add animenosub/*.json || echo "No animenosub files"
          git commit -m "All JSON güncellendi [auto]" || echo "No changes"
          git push origin main

  part2:
    name: Step 4-5-6-8 Paralel Çalıştır
    runs-on: ubuntu-latest
    needs: part1
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    strategy:
      matrix:
        job_name: [sezonlukdizi, dizigom, anizm, animenosub]
    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      - name: Install Shared Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml playwright aiohttp aiofiles dotenv
          playwright install

      - name: Run ${{ matrix.job_name }} yenibolumler.py
        run: |
          case ${{ matrix.job_name }} in
            sezonlukdizi)
              python private_py/series/sezonlukdizi/yenibolumler.py
              ;;
            dizigom)
              python private_py/series/dizigom/yenibolumler.py
              ;;
            anizm)
              python private_py/anime/anizm/yenibolumler.py
              ;;
            animenosub)
              python private_py/anime/ingilizce/animenosub/yenibolumler.py
              ;;
          esac

      - name: Sync ${{ matrix.job_name }} output to private repo
        run: |
          case ${{ matrix.job_name }} in
            sezonlukdizi)
              git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/sezonlukdizi.git private_sezonlukdizi
              rsync -a sdizi/ private_sezonlukdizi/
              cd private_sezonlukdizi
              ;;
            dizigom)
              git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/dizigom.git private_dizigom
              rsync -a dizigom/ private_dizigom/
              cd private_dizigom
              ;;
            anizm)
              git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/anizm.git private_anizm
              rsync -a anizm/ private_anizm/
              cd private_anizm
              ;;
            animenosub)
              git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/animenosub.git private_animenosub
              rsync -a animenosub/ private_animenosub/
              cd private_animenosub
              ;;
          esac
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add . || echo "No files"
          git commit -m "${{ matrix.job_name }} çıktı güncellendi [auto]" || echo "No changes"
          git push origin main

  push_jsons:
    name: Tüm JSON'ları Tek Seferde Commit & Push
    runs-on: ubuntu-latest
    needs: part2
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: main

      - name: Commit and Push All JSONs
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dizigom/*.json sdizi/*.json anizm/*.json animenosub/*.json || echo "No files"
          git commit -m "Tüm JSON dosyaları güncellendi [auto]" || echo "No changes"
          git push origin main

  part3:
    name: Step 9 Çalıştır
    runs-on: ubuntu-latest
    needs: push_jsons
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      - name: Run yenibolumdenanajsona Script
        run: python private_py/series/yenibolumdenanajsona.py

      - name: Commit and Push Ana JSONs to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dizigom/*.json sdizi/*.json anizm/*.json animenosub/*.json || echo "No files"
          git commit -m "All Ana JSON güncellendi [auto]" || echo "No changes"
          git push origin main

  part4:
    name: Step 10-11 Çalıştır
    runs-on: ubuntu-latest
    needs: part3
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      - name: Install Shared Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml aiohttp aiofiles dotenv
       
      - name: Run dizigomfilmler Script
        run: python private_py/movies/dizigom/dizigomfilmler.py

      - name: Run Setfilm Script
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: python private_py/movies/setfilmizle/ilksayfatümm3uolusturma.py    

      - name: Sync Filmler outputs to private m3u8file repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/m3u8file.git privatate_m3u8file
          cp dizigomfilmler.m3u privatate_m3u8file/dizigomfilmler.m3u || echo "dizigomfilmler.m3u bulunamadı"
          cp xtream/setfilmizlefilmler.m3u privatate_m3u8file/setfilmizlefilmler.m3u || echo "setfilmizlefilmler.m3u bulunamadı"
          cd privatate_m3u8file
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add setfilmizlefilmler.m3u dizigomfilmler.m3u
          git commit -m "Filmlerin çıktısı güncellendi [auto]" || echo "No changes"
          git push origin main
