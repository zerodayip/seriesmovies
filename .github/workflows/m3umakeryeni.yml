name: M3U MAKER

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Her 5 saatte bir

jobs:
  part1:
    name: Step 1-2 Çalıştır
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      GH_TOKEN1: ${{ secrets.GH_TOKEN1 }}
      GH_TOKEN2: ${{ secrets.GH_TOKEN2 }}

    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-cache-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-cache-${{ runner.os }}-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      - name: Install Shared Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml playwright aiohttp aiofiles dotenv
          playwright install

      # 1. Vavoo IPTV Scripts
      - name: Run KENDIPROXYIM.py
        run: python private_py/vavoo/iptv/vavooiptvkendi.py

      - name: Sync Vavoo outputs to private m3u8file repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/m3u8file.git privaate_m3u8file
          cp v/vavoo.m3u privaate_m3u8file/vavoo.m3u || echo "v/vavoo.m3u bulunamadı"
          cd privaate_m3u8file
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add vavoo.m3u
          git commit -m "Vavoo çıktısı güncellendi [auto]" || echo "No changes"
          git push origin main

      # 2. Run All JSON
      - name: Run Dizigom JSON Script
        run: python private_py/series/dizigom/dizigomdizijson.py

      - name: Run Sezonlukdizi JSON Script
        run: python private_py/series/sezonlukdizi/tumdizilerjson.py

      - name: Run Anizm JSON Script
        run: python private_py/anime/anizm/anizimjson.py

      - name: Commit and Push All JSONs to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dizigom/*.json || echo "No dizigom files"
          git add sdizi/*.json || echo "No sezonlukdizi files"
          git add anizm/*.json || echo "No anizm files"
          git add animeizlesene/*.json || echo "No animeizlesene files"
          git commit -m "All JSON güncellendi [auto]" || echo "No changes"
          git push origin main

  part2:
    name: Step 3-4-5-7 Çalıştır
    runs-on: ubuntu-latest
    needs: part1
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      - name: Install Shared Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml playwright aiohttp aiofiles dotenv
          playwright install

      # 3. Sezonlukdizi M3U Maker
      - name: Run SezonlukDizi yenibolumler.py
        run: python private_py/series/sezonlukdizi/yenibolumler.py

      - name: Commit and Push SezonlukDizi JSON to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add sdizi/*.json || echo "No JSON files"
          git commit -m "SezonlukDizi JSON güncellendi [auto]" || echo "No changes"
          git push origin main

      - name: Sync SezonlukDizi output to private repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/sezonlukdizi.git private_sezonlukdizi
          rsync -a sdizi/ private_sezonlukdizi/
          cd private_sezonlukdizi
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add . || echo "No files"
          git commit -m "SezonlukDizi çıktı güncellendi [auto]" || echo "No changes"
          git push origin main

      # 4. Dizigom M3U Maker
      - name: Run Dizigom yenibolumler.py
        run: python private_py/series/dizigom/yenibolumler.py

      - name: Commit and Push Dizigom JSON to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dizigom/*.json || echo "No JSON files"
          git commit -m "Dizigom JSON güncellendi [auto]" || echo "No changes"
          git push origin main

      - name: Sync Dizigom output to private repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/dizigom.git private_dizigom
          rsync -a dizigom/ private_dizigom/
          cd private_dizigom
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add . || echo "No files"
          git commit -m "Dizigom çıktı güncellendi [auto]" || echo "No changes"
          git push origin main

      # 5. Anizm M3U Maker
      - name: Run Anizm yenibolumler.py
        run: python private_py/anime/anizm/yenibolumler.py

      - name: Commit and Push Anizm JSON to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add anizm/*.json || echo "No JSON files"
          git commit -m "Anizm JSON güncellendi [auto]" || echo "No changes"
          git push origin main

      - name: Sync Anizm output to private repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/anizm.git private_anizm
          rsync -a anizm/ private_anizm/
          cd private_anizm
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add . || echo "No files"
          git commit -m "Anizm çıktı güncellendi [auto]" || echo "No changes"
          git push origin main

      # 7. RecTV Script (PASİF)
      # - name: Run RecTV Script
      #   run: python private_py/rectv/rectv.py
      #
      # - name: Sync RecTV outputs to private m3u8file repo
      #   run: |
      #     git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/m3u8file.git private_m3u8file
      #     mkdir -p private_m3u8file/rec
      #     cp r/reccanli.m3u private_m3u8file/rec/ || echo "reccanli.m3u kopyalanamadı"
      #     cp r/recfilm.m3u private_m3u8file/rec/ || echo "recfilm.m3u kopyalanamadı"
      #     cp r/recdizi.m3u private_m3u8file/rec/ || echo "recdizi.m3u kopyalanamadı"
      #     cp r/recanime.m3u private_m3u8file/rec/ || echo "recanime.m3u kopyalanamadı"
      #     cd private_m3u8file
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"
      #     git add rec/*.m3u
      #     git commit -m "RecTV çıktıları güncellendi [auto]" || echo "No changes"
      #     git push origin main

  part3:
    name: Step 6 Çalıştır
    runs-on: ubuntu-latest
    needs: part2
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout public repo (main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Clone Private Py Repo
        run: |
          git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/zerodayip/Py.git private_py

      # 6. YeniJSON to AnaJSON
      - name: Run yenibolumdenanajsona Script
        run: python private_py/series/yenibolumdenanajsona.py

      - name: Commit and Push Ana JSONs to public repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dizigom/*.json sdizi/*.json anizm/*.json || echo "No files"
          git commit -m "All Ana JSON güncellendi [auto]" || echo "No changes"
          git push origin main
