name: Domain Link G√ºncelleyici

on:
  schedule:
    - cron: "0 3 * * *"   # her g√ºn sabah 03:00'te
  workflow_dispatch:       # manuel tetikleme

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Domain linklerini kontrol et ve g√ºncelle
        id: updater
        run: |
          import os, requests

          folder = "domain"
          changed_files = []

          def resolve_final_url(url):
              try:
                  r = requests.get(url, allow_redirects=True, timeout=10, stream=True)
                  final = r.url
                  r.close()
                  return final
              except requests.RequestException:
                  return None

          for fname in os.listdir(folder):
              if not fname.endswith(".txt"):
                  continue

              path = os.path.join(folder, fname)
              with open(path, "r", encoding="utf-8") as f:
                  url = f.read().strip()

              if not url:
                  continue

              final = resolve_final_url(url)
              domain_name = os.path.splitext(fname)[0].capitalize()

              if final is None:
                  print(f"{domain_name}\n‚ùå Domain kapanmƒ±≈ü olabilir, y√∂nlendirme veya domaine eri≈üim yok.\nKontrol edilmesi gerekiyor.\nURL: {url}\n")
                  continue

              if final.rstrip("/") != url.rstrip("/"):
                  with open(path, "w", encoding="utf-8") as f:
                      f.write(final + "\n")
                  print(f"{domain_name}\nüîÄ Domain y√∂nlendirmesi bulundu.\nURL: {url} ‚Üí {final} (txt dosyasƒ± g√ºncellendi)\n")
                  changed_files.append(fname)
              else:
                  print(f"{domain_name}\n‚úÖ Domain hala ge√ßerlidir.\nURL: {url}\n")

          if changed_files:
              with open("changed_files.txt", "w") as f:
                  f.write("\n".join(changed_files))
        shell: python

      - name: Commit ve push deƒüi≈üen dosyalar
        if: hashFiles('changed_files.txt') != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          while IFS= read -r file; do
            git add "domain/$file"
            git commit -m "Domain g√ºncellendi: $file"
          done < changed_files.txt

          git push
